{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/spacex.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA8B;AACoB;;;;;;;ICwBxC,yEACE;IAAA,6EAAkG;IAAlC,8VAAiC;IAAC,uDAAQ;IAAA,4DAAS;IACrH,4DAAM;;;IAD6C,0DAAc;IAAd,0EAAc;IAAmC,0DAAQ;IAAR,wEAAQ;;;IAyCpH,0EAAmD;IAAA,2EAAgB;IAAA,4DAAM;;;IAMvE,0EAA4E;IAAA,4EAAiB;IAAA,4DAAM;;;IAY3F,yEACI;IAAA,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,kFACJ;;;IACA,oEAEG;;;IAdX,0EACE;IAAA,0EACE;IAAA,0EACE;IAAA,qEACF;IAAA,4DAAM;IACN,0EACE;IAAA,yEAAyB;IAAA,uDAAoD;IAAA,4DAAK;IAClF,qEAAI;IAAA,uEAAY;IAAA,4DAAK;IACrB,qEACE;IAAA,sHACI;IAEJ,sHAEF;IACA,4DAAK;IACL,sEAAI;IAAA,yEAAa;IAAA,4EAAyB;IAAA,wDAAuB;IAAA,4DAAO;IAAA,4DAAK;IAC7E,sEAAI;IAAA,+EAAmB;IAAA,4EAAyB;IAAA,wDAA0B;IAAA,4DAAO;IAAA,4DAAK;IACtF,sEAAI;IAAA,gFAAoB;IAAA,4EAAyB;IAAA,wDAAoD;IAAA,4DAAO;IAAA,4DAAK;IACnH,4DAAM;IACN,4DAAM;IACV,4DAAM;;;IAlBK,0DAAqC;IAArC,4JAAqC;IAGjB,0DAAoD;IAApD,kIAAoD;IAGpD,0DAAqC;IAArC,0FAAqC;IAGrC,0DAAsC;IAAtC,mGAAsC;IAIrB,0DAAuB;IAAvB,uFAAuB;IACjB,0DAA0B;IAA1B,0FAA0B;IACzB,0DAAoD;IAApD,oHAAoD;;;IAxB7G,yEAEE;IACA,gHAA4E;;IAG5E,iHACE;;IAuBJ,4DAAM;;;;IA3B+B,0DAAwC;IAAxC,wMAAwC;IAGpB,0DAA2C;IAA3C,wJAA2C;;ADvEtG,uBAAuB;AAOvB,4CAA4C;AACrC,MAAM,YAAY;IAYvB,6CAA6C;IAC7C,YAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAZlD,gBAAgB;QAChB,UAAK,GAAG,wBAAwB,CAAC;QAEjC,YAAY;QACZ,aAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;QAE/B,cAAS,GAAa,IAAI,CAAC;QAC3B,eAAU,GAAO,EAAE,CAAC;QACpB,aAAQ,GAAO,EAAE,CAAC;QAClB,eAAU,GAAO,EAAE,CAAC;IAIpB,CAAC;IAED,wFAAwF;IACxF,YAAY;QACV,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACjG,CAAC;IAED,uGAAuG;IACvG,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,KAAK,IAAI,IAAI,GAAG,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,EAAE,IAAI,EAAE,EAAE;YAC9D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC1B;QAED,8BAA8B;QAC9B,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,sEAAsE;IACtE,aAAa;QACX,OAAO,IAAI,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,iDAAiD;IACjD,gBAAgB,CAAC,IAAI;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,uDAAuD;IACvD,kBAAkB,CAAC,MAAM;QACvB,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,qDAAqD;IACrD,gBAAgB,CAAC,IAAI;QACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;;wEApEU,YAAY;4FAAZ,YAAY;QCZzB,4EACE;QAAA,qEACE;QAAA,uDACF;QAAA,4DAAK;QACP,4DAAS;QAGT,yEACA;QAAA,yEACA;QAAA,yEACE;QACF,yEACE;QAAA,yEAEE;QAAA,qEACE;QAAA,oEACF;QAAA,4DAAK;QAEH,0EACE;QAAA,yEACF;QAAA,4DAAM;QACN,0EACE;QAAA,0EACE;QACA,0GACE;QAEJ,4DAAM;QACR,4DAAM;QAGN,0EACE;QAAA,+EACF;QAAA,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,8EAAkG;QAApC,qIAAS,uBAAmB,IAAI,CAAC,IAAE;QAAC,gEAAI;QAAA,4DAAS;QACjH,4DAAM;QACN,0EACE;QAAA,8EAAoG;QAArC,qIAAS,uBAAmB,KAAK,CAAC,IAAE;QAAC,iEAAK;QAAA,4DAAS;QACpH,4DAAM;QACR,4DAAM;QACR,4DAAM;QAGN,0EACE;QAAA,gFACF;QAAA,4DAAM;QACN,0EACE;QAAA,0EACE;QAAA,0EACE;QAAA,8EAAgG;QAAlC,qIAAS,qBAAiB,IAAI,CAAC,IAAE;QAAC,gEAAI;QAAA,4DAAS;QAC/G,4DAAM;QACN,0EACE;QAAA,8EAAkG;QAAnC,qIAAS,qBAAiB,KAAK,CAAC,IAAE;QAAC,iEAAK;QAAA,4DAAS;QAClH,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEV,4DAAM;QACR,4DAAM;QAGN,2EACE;QACA,2GAAmD;QAGnD,2GAEE;QA6BJ,4DAAM;QAEN,4DAAM;QACN,4DAAM;QACN,4DAAM;QAGN,8EACE;QAAA,sEACE;QAAA,uFACF;QAAA,4DAAK;QACP,4DAAS;QAGT,4EAA+B;;QAhH3B,0DACF;QADE,qFACF;QAqB2B,2DAAqC;QAArC,wFAAqC;QA0C3D,2DAAiB;QAAjB,+EAAiB;QAGL,0DAAkB;QAAlB,gFAAkB;;6FDzDxB,YAAY;cAPxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAkD;AACQ;AACjB;AACc;AACN;AAEO;AACT;;AAcxC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,6DAAa,CAAC,YALjB;YACT,uEAAa;YACX,oEAAgB;YAChB,qEAAgB;SACjB;mIAIU,SAAS,mBAVlB,2DAAY,aAGd,uEAAa;QACX,oEAAgB;QAChB,qEAAgB;6FAKP,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACT,uEAAa;oBACX,oEAAgB;oBAChB,qEAAgB;iBACjB;gBACD,SAAS,EAAE,CAAC,6DAAa,CAAC;gBAC1B,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAwD;AACb;AAEG;AACF;;;AAQ5C,+EAA+E;AACxE,MAAO,aAAa;IACvB,cAAc;IACd,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAIpC,yBAAyB;QACjB,QAAG,GAAY,kDAAkD,CAAC;IAH1E,CAAC;IAKD,2BAA2B;IAC3B,OAAO,CAAC,QAAa,EAAE,MAAW,EAAE,IAAS;QACzC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,GAAG,GAAC,kBAAkB,GAAC,QAAQ,GAAC,gBAAgB,GAAC,MAAM,GAAC,eAAe,GAAC,IAAI,CAAC,CAAC,IAAI,CAC/G,iEAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,wDAAwD;IACxD,SAAS,CAAC,aAA+B;QACrC,IAAG,aAAa,CAAC,KAAK,YAAY,UAAU,EAAC;YACzC,KAAK,CAAC,qBAAqB,GAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC7D;aACG;YACA,KAAK,CAAC,mBAAmB,GAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC3D;QACD,OAAO,uDAAU,CAAC,wBAAwB,CAAC,CAAC;IAChD,CAAC;;0EA1BS,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAJX,MAAM;6FAIR,aAAa;cAL1B,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACVD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","// Import all neccessary files\nimport { Component, OnInit } from '@angular/core';\nimport { SpacexService } from './spacex.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n// Initialize component\n@Component({\n  selector: 'app-root', // component selector\n  templateUrl: './app.component.html', // template file used for the component\n  styleUrls: ['./app.component.css'], // css file used for the component\n})\n\n// define class and export it for future use\nexport class AppComponent implements OnInit {\n  // Project title\n  title = 'SpaceX Launch Programs';\n\n  // Variables\n  launchYr : any[] = new Array();\n  spaceXData$ : Observable <any[]>;\n  isLoading : boolean = true;\n  isLaunched:any = \"\";\n  isLanded:any = \"\";\n  launchYear:any = \"\";\n\n  // Constructor, initializing service variable\n  constructor(private _spacexservice : SpacexService){\n  }\n  \n  // Method to get data from service according to filter value, initially loading all data\n  getSpaceData(){\n    this.spaceXData$ = this._spacexservice.getData(this.isLaunched,this.isLanded, this.launchYear);\n  }\n\n  // Method calling on initialization of the component to get filter years and call getSpacexData for API\n  ngOnInit(){\n    this.getSpaceData();\n    for (let year = 2006; year <= new Date().getFullYear(); year++) {\n      this.launchYr.push(year);\n    }\n\n    // Wait for 4 sec to load data\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 4000);\n  }\n  \n  // Method calling for getting launch years for creating filter buttons\n  getLaunchYear() : any{\n    return this.launchYr;\n    this.getSpaceData();\n  }\n\n  // Method calling on click of launch year buttons\n  filterByLaunchYr(year){\n    this.launchYear = year;\n    this.isLoading = true;\n    this.getSpaceData();\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 2000);\n  }\n\n  // Method calling on click of successful launch buttons\n  filterBySuccLaunch(launch){\n    this.isLaunched = launch;\n    this.isLoading = true;\n    this.getSpaceData();\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 2000);\n  }\n\n  // Method calling on click of successful land buttons\n  filterBySuccLand(land){\n    this.isLanded = land;\n    this.isLoading = true;\n    this.getSpaceData();\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 2000);\n  }\n\n}\n","<!-- Header for project name -->\n<header class=\"font-weight-bold m-1 p-2\">\n  <h4>\n    {{title}}\n  </h4>\n</header>\n\n<!-- filters and content area -->\n<div class=\"container-fluid\">\n<div class=\"content\">\n<div class=\"row\">\n  <!-- Filter section -->\n<div class=\"col-sm-12 col-md-4 col-lg-3\">\n  <div class=\"card bg-white p-2 rounded filter-menu\">\n\n    <h5>\n      Filters\n    </h5>\n    <!-- Launch Years Filter -->\n      <div class=\"text-center filter-title\">\n        Launch Year\n      </div>\n      <div class=\"container text-center\">\n        <div class=\"row\">\n          <!-- *ngFor directive to add launch year buttons dynamically -->\n          <div class=\"col-6\" *ngFor=\"let item of getLaunchYear();\">\n            <button class=\"btn btn-filter m-1\" type=\"button\" [value]='item' (click)=\"filterByLaunchYr(item);\">{{item}}</button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Is Successful Launch Filter -->\n      <div class=\"text-center filter-title\">\n        Successful Launch\n      </div>\n      <div class=\"container text-center\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button class=\"btn btn-filter m-1\" type=\"button\" value='true' (click)=\"filterBySuccLaunch(true);\">True</button>\n          </div>\n          <div class=\"col-6\">\n            <button class=\"btn btn-filter m-1\" type=\"button\" value='false' (click)=\"filterBySuccLaunch(false);\">False</button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Is Successful Landing Filter -->\n      <div class=\"text-center filter-title\">\n        Successful Landing\n      </div>\n      <div class=\"container text-center\">\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <button class=\"btn btn-filter m-1\" type=\"button\" value='true' (click)=\"filterBySuccLand(true);\">True</button>\n          </div>\n          <div class=\"col-6\">\n            <button class=\"btn btn-filter m-1\" type=\"button\" value='false' (click)=\"filterBySuccLand(false);\">False</button>\n          </div>\n        </div>\n      </div>\n\n  </div>\n</div>\n\n<!-- Content Section -->\n<div class=\"col-sm-12 col-md-8 col-lg-9\">\n  <!-- show loading data text for few secondds until data loads from API -->\n  <div *ngIf=\"isLoading\" class=\"text-center loading\">Loading data ...</div>\n\n  <!-- show contents after loading data from API -->\n  <div class=\"row\" *ngIf=\"!isLoading\">\n\n    <!-- show loading data text for few secondds until data loads from API -->\n    <div class=\"text-center no-record\" *ngIf=\"(spaceXData$ | async)?.length==0\">No records found.</div>\n\n    <!-- *ngFor directive to add contents dynamically -->\n    <div class=\"col-sm-12 col-md-6 col-lg-3 pad-bottom-15\" *ngFor=\"let details of spaceXData$ | async\">\n      <div class=\"card bg-white p-3 rounded\">\n        <div class=\"mission_patch\">\n          <img [src] = \"details.links.mission_patch\" alt=\"mission patch\" />\n        </div>\n        <div class=\"description\">\n          <h5 class=\"text-primary\">{{details.mission_name}} # {{details.flight_number}}</h5>\n          <h5>Mission Ids:</h5>\n          <ul>\n            <li class=\"text-muted\" *ngFor=\"let id of details.mission_id\">\n                {{id}}\n            </li>\n            <li class=\"text-muted\" *ngIf=\"details.mission_id.length == 0\">\n              \n          </li>\n          </ul>\n          <h5>Launch Year: <span class=\"text-muted\">{{details.launch_year}}</span></h5>\n          <h5>Successful Launch: <span class=\"text-muted\">{{details.launch_success}}</span></h5>\n          <h5>Successful Landing: <span class=\"text-muted\">{{details.rocket.first_stage.cores[0].land_success}}</span></h5>\n        </div>\n        </div>\n    </div>\n\n    \n  </div>\n</div>\n\n</div>\n</div>\n</div>\n\n<!-- Footer section for developer details -->\n<footer class=\"text-center font-weight-bold p-2 fixed-bottom\">\n  <h5>\n    Developed by: Sumit Kumar\n  </h5>\n</footer>\n\n<!-- directive for routing -->\n<router-outlet></router-outlet>","// Import neccessary files for initializing module\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { SpacexService } from './spacex.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n  BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [SpacexService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Import neccessary files used for service handling API\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ISpaceX } from './spacexInterface';\r\nimport { AppComponent } from './app.component';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\n// Define the service for fetching data from API and to be used by AppComponent\r\nexport  class SpacexService{\r\n    // Constructor\r\n    constructor(private http: HttpClient){\r\n\r\n    }\r\n\r\n    // Url to fetch data from\r\n    private url : string = 'https://api.spacexdata.com/v3/launches?limit=100';\r\n\r\n    // Method to fetch API data\r\n    getData(launched: any, landed: any, year: any) : Observable <any[]>{\r\n        console.log(\"parameters\");\r\n        return this.http.get<any[]>(this.url+'&launch_success='+launched+'&land_success='+landed+'&launch_year='+year).pipe(\r\n            catchError(this.showError)\r\n        );\r\n    }\r\n\r\n    // Method to show Error if unable to fetch data from API\r\n    showError(errorResponse:HttpErrorResponse){\r\n        if(errorResponse.error instanceof ErrorEvent){\r\n            alert(\"Client side error: \"+ errorResponse.error.message);\r\n        }\r\n        else{\r\n            alert(\"Server side error\"+ errorResponse.error.message);\r\n        }\r\n        return throwError(\"Please try again later\");\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}